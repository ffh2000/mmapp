apply plugin: 'com.android.application'
apply plugin: 'de.mannodermaus.android-junit5'
apply plugin: 'org.sonarqube'

android {
    compileSdkVersion 33
    testOptions.unitTests.includeAndroidResources = true
    buildToolsVersion = '30.0.3'

    defaultConfig {
        applicationId 'de.uhd.ifi.se.moviemanager'
        minSdkVersion 29
        targetSdkVersion 33
        versionCode 1
        versionName '1.0'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled = true
        }
    }
    testOptions {
        animationsDisabled true
        unitTests {
            includeAndroidResources = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_14
        targetCompatibility JavaVersion.VERSION_14
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES']
        }
    }

    namespace 'de.uhd.ifi.se.moviemanager'
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'org.jsoup:jsoup:1.16.1'

    // https://mvnrepository.com/artifact/org.json/json
    implementation 'org.json:json:20230227'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation 'com.google.code.gson:gson:2.10.1'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.0'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.0'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-text
    implementation 'org.apache.commons:commons-text:1.10.0'

    // https://mvnrepository.com/artifact/com.google.guava/guava
    implementation 'com.google.guava:guava:31.1-jre'

    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.3'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.9.3'
    testImplementation 'org.robolectric:robolectric:4.10.2'
    testImplementation 'com.google.auto.value:auto-value-annotations:1.10.1'
    testAnnotationProcessor 'com.google.auto.value:auto-value:1.10.1'


    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.5.1'

    compileOnly 'com.google.dagger:dagger:2.46'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.46'
}

def buildAliases = [
        'unittest': ['clean', 'test', 'sonarqube']
]
def expandedTaskList = []

gradle.startParameter.taskNames.each {
    expandedTaskList << (buildAliases[it] ? buildAliases[it] : it)
}

gradle.startParameter.taskNames = expandedTaskList.flatten()

gradle.taskGraph.whenReady { taskGraph ->
    println "Found task graph: " + taskGraph
    println "Found " + taskGraph.allTasks.size() + " tasks."
    taskGraph.allTasks.forEach { task ->
        println task
        task.dependsOn.forEach { dep ->
            println "  - " + dep
        }
    }
}